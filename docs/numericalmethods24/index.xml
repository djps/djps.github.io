<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JTMS-MAT-13: Numerical Methods | David Sinden</title>
    <link>https://djps.github.io/docs/numericalmethods24/</link>
      <atom:link href="https://djps.github.io/docs/numericalmethods24/index.xml" rel="self" type="application/rss+xml" />
    <description>JTMS-MAT-13: Numerical Methods</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Tue, 14 Nov 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://djps.github.io/media/logo_hu1617270246782058896.png</url>
      <title>JTMS-MAT-13: Numerical Methods</title>
      <link>https://djps.github.io/docs/numericalmethods24/</link>
    </image>
    
    <item>
      <title>JTMS-MAT-13: Numerical Methods</title>
      <link>https://djps.github.io/docs/numericalmethods24/intro/intro/</link>
      <pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/intro/intro/</guid>
      <description>&lt;p&gt;This site will be the primary source of information for the course.&lt;/p&gt;
&lt;h2 id=&#34;lectures&#34;&gt;Lectures&lt;/h2&gt;
&lt;p&gt;All information regarding scheduling, as well as a link to this site, will also be found on CampusNet.&lt;/p&gt;
&lt;p&gt;Course notes can be found &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notes/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;intended-learning-outcomes&#34;&gt;Intended Learning Outcomes&lt;/h2&gt;
&lt;p&gt;By the end of the module, students will be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;describe the basic principles of discretization which are used in the numerical treatment of continuous problems;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;command the methods described in the content section of this module description to the extent that they can solve standard text-book problems reliably and with confidence;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;recognize mathematical terminology used in textbooks and research papers on numerical methods in the quantitative sciences, engineering, and mathematics to the extent that they fall into the content categories covered in this module;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;implement simple numerical algorithms in a high level programming language;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;understand the documentation of standard numerical library code and understand potential limitations and caveats of such algorithms.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;knowledge-abilities-or-skills&#34;&gt;Knowledge, Abilities, or Skills&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Knowledge of Calculus: functions, inverse functions, sets, real numbers, sequences and limits, polynomials, rational functions, trigonometric functions, logarithm and exponential function, parametric equations, tangent lines, graphs, derivatives, anti-derivatives, elementary techniques for solving equations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowledge of Linear Algebra: vectors, matrices, lines, planes, $n$-dimensional Euclidean vector space, rotation, translation, dot product (scalar product), cross product, normal vectors, eigenvalues, eigenvectors, elementary techniques for solving systems of linear equations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some examples will be presented as &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/&#34;&gt;python notebooks&lt;/a&gt;, but no knowledge of python is required, nor will there be any assessment of ability to code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;recommendations-for-preparation&#34;&gt;Recommendations for Preparation&lt;/h2&gt;
&lt;p&gt;Taking &amp;ldquo;&lt;em&gt;Calculus and Elements of Linear Algebra II&lt;/em&gt;&amp;rdquo; (CTMS-MAT-10) before taking this module is recommended, but not a pre-requisite.&lt;/p&gt;
&lt;p&gt;A thorough review of &amp;ldquo;&lt;em&gt;Calculus and Elements of Linear Algebra&lt;/em&gt;&amp;rdquo; (CTMS-MAT-09), with emphasis on the topics listed as &amp;ldquo;Content and Educational Aims&amp;rdquo; is recommended.&lt;/p&gt;
&lt;h2 id=&#34;usability-and-relationship-to-other-modules&#34;&gt;Usability and Relationship to other Modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The module is a mandatory / mandatory elective module of the Methods and Skills area that is part of the Constructor Track (Methods and Skills modules; Community Impact Project module; Language modules; Big Questions modules).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This module is a co-recommendation for the module &amp;ldquo;&lt;em&gt;Applied Dynamical Systems Lab&lt;/em&gt;&amp;rdquo; (CA-S-MAT-810) in which the actual implementation in a high level programming language of the learned methods will be covered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The module is a mandatory / mandatory elective module of the Methods and Skills area that is part of the Constructor Track (Methods and Skills modules; Community Impact Project module; Language modules; Big Questions modules).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mandatory for ECE, IMS, MATH, PHY.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elective for all other study programs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;text-books&#34;&gt;Text Books&lt;/h2&gt;
&lt;p&gt;There is no primary or required book, but there are many suitable books, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;&lt;em&gt;An Introduction to Numerical Methods and Analysis&lt;/em&gt;&amp;rdquo; - J. F. Epperson (2013) Wiley 2nd Edition.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&lt;em&gt;Numerical Analysis&lt;/em&gt;&amp;rdquo; - R. L. Burden and J. D. Faires (2011) Brooks/Cole. 9th Edition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;course-outline&#34;&gt;Course Outline&lt;/h2&gt;
&lt;p&gt;The following topics will be covered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Taylor series&lt;/li&gt;
&lt;li&gt;number representations&lt;/li&gt;
&lt;li&gt;Gaussian elimination&lt;/li&gt;
&lt;li&gt;LU decomposition&lt;/li&gt;
&lt;li&gt;Cholesky decomposition&lt;/li&gt;
&lt;li&gt;iterative methods&lt;/li&gt;
&lt;li&gt;bisection method&lt;/li&gt;
&lt;li&gt;Newton&amp;rsquo;s method&lt;/li&gt;
&lt;li&gt;secant method&lt;/li&gt;
&lt;li&gt;polynomial interpolation&lt;/li&gt;
&lt;li&gt;Aitken&amp;rsquo;s algorithm&lt;/li&gt;
&lt;li&gt;Lagrange interpolation&lt;/li&gt;
&lt;li&gt;Newton interpolation&lt;/li&gt;
&lt;li&gt;piecewise interpolation&lt;/li&gt;
&lt;li&gt;spline interpolation&lt;/li&gt;
&lt;li&gt;$b$-splines&lt;/li&gt;
&lt;li&gt;least squares approximation&lt;/li&gt;
&lt;li&gt;polynomial regression&lt;/li&gt;
&lt;li&gt;difference schemes&lt;/li&gt;
&lt;li&gt;Richardson extrapolation&lt;/li&gt;
&lt;li&gt;quadrature rules&lt;/li&gt;
&lt;li&gt;time stepping schemes for ordinary differential equations&lt;/li&gt;
&lt;li&gt;Runge-Kutta schemes&lt;/li&gt;
&lt;li&gt;finite difference method for partial differential equations&lt;/li&gt;
&lt;/ul&gt;
&lt;!--  * Hermite interpolation
      * Bezier curves
      * De Casteljau&#39;s algorithm --&gt;
&lt;h3 id=&#34;itinerary&#34;&gt;Itinerary&lt;/h3&gt;
&lt;p&gt;Provisionally, the course will run as follows&lt;/p&gt;
&lt;div class=&#34;mermaid&#34;&gt;gantt
  dateFormat   MM-DD
  axisFormat   %e-%b

  title Provisional Schedule 2024

  section  Errors
  Taylor Series                    :a1,  02-01, 1w
  Number Representations           :a1b, 02-08, 1w

  section  Algebraic Equations
  Linear Equations 1               :a2,  02-14, 3w
  Nonlinear Equations              :a2b, 03-02, 1w
  Linear Equations 2               :a5,  04-17, 3w

  section  Approximations
  Interpolation                    :a3,  03-07, 2w
  Integration                      :a4,  04-03, 2w

  section  Solutions
  Ordinary Differential Equations  :a6,  05-02, 2w

  section  Summary
  Summary                          :active, a7,  05-15, 1w

  click a1   href &#34;https://djps.github.io/docs/numericalmethods24/part1/taylor/&#34;
  click a1b  href &#34;https://djps.github.io/docs/numericalmethods24/part1/number-representations/&#34;
  click a2   href &#34;https://djps.github.io/docs/numericalmethods24/part1/linear-equations/#direct-methods/&#34;
  click a2b  href &#34;https://djps.github.io/docs/numericalmethods24/part1/nonlinear-equations/&#34;  
  click a5   href &#34;https://djps.github.io/docs/numericalmethods24/part1/linear-equations/#indirect-methods&#34;
  click a3   href &#34;https://djps.github.io/docs/numericalmethods24/part2/interpolation/&#34;
  click a4   href &#34;https://djps.github.io/docs/numericalmethods24/part2/integration/&#34;  
  click a6   href &#34;https://djps.github.io/docs/numericalmethods24/part3/odes/&#34;  
&lt;/div&gt;
&lt;!--
```mermaid
gantt
  dateFormat   MM-DD
  axisFormat   %e-%b

  title Provisional Schedule 2025

  section  Errors
  Taylor Series                    :a1,  02-03, 1w
  Number Representations           :a1b, 02-10, 1w

  section  Equations
  Linear Equations 1               :a2,  02-17, 2.5w
  Nonlinear Equations              :a2b, 03-10, 1w
  Linear Equations 2               :a5,  03-17, 2.5w

  section  Approximations
  Interpolation                    :a3a, 04-07, 1w
  Break                            :crit, aX,  04-14, 1w
  Interpolation                    :a3b, 04-21, 1w
  Integration                      :a4,  04-28, 2w

  section  Solutions
  Ordinary Differential Equations  :a6,  05-02, 2w

  section  Summary
  Summary                          :active, a7,  05-14, 1w

  click a1   href &#34;https://djps.github.io/docs/numericalmethods24/part1/taylor/&#34;
  click a1b  href &#34;https://djps.github.io/docs/numericalmethods24/part1/number-representations/&#34;
  click a2   href &#34;https://djps.github.io/docs/numericalmethods24/part1/linear-equations/#direct-methods/&#34;
  click a2b  href &#34;https://djps.github.io/docs/numericalmethods24/part1/nonlinear-equations/&#34;  
  click a5   href &#34;https://djps.github.io/docs/numericalmethods24/part1/linear-equations/#indirect-methods&#34;
  click a3a  href &#34;https://djps.github.io/docs/numericalmethods24/part2/interpolation/&#34;
  click a3b  href &#34;https://djps.github.io/docs/numericalmethods24/part2/interpolation/&#34;
  click a4   href &#34;https://djps.github.io/docs/numericalmethods24/part2/integration/&#34;  
  click a6   href &#34;https://djps.github.io/docs/numericalmethods24/part3/odes/&#34;  
``` --&gt;
&lt;h3 id=&#34;structure&#34;&gt;Structure&lt;/h3&gt;
&lt;p&gt;The course content has the following structure:&lt;/p&gt;
&lt;div class=&#34;markmap&#34; style=&#34;height: 500px;&#34;&gt;

&lt;pre&gt;---
markmap:
  zoom: false
  pan: false
---
- Numerical Methods
  - Errors
    - [Taylor Series](/docs/numericalmethods24/part1/taylor/)
    - [Number Representations](docs/numericalmethods24/part1/number-representations/)
  - Algebraic Equations
    - Linear Equations
      - [Direct Methods](/docs/numericalmethods24/part1/linear-equations/#direct-methods)
        - Gaussian Elimination
        - Partial Pivoting
        - LU Decomposition
        - Cholesky Decomposition
      - [Iterative Methods](/docs/numericalmethods24/part1/linear-equations/#indirect-methods)
        - Jacobi
        - Gauss-Seidel
        - SOR
    - [Nonlinear Equations](/docs/numericalmethods24/part1/nonlinear-equations/)
      - Bisection Method
      - Newton Method
      - Secant Method
  - Approximations
    - [Interpolation](/docs/numericalmethods24/part2/interpolation/)
      - Polynomial
      - Lagrange
      - Newton
      - $b$-splines
    - [Integration](/docs/numericalmethods24/part2/integration/#numerical-integration)
      - Simpson
      - Trapezium
      - Romberg Algorithm
      - Gaussian Quadrature
  - [Solutions](/docs/numericalmethods24/part3/odes/)
    - Difference Schemes
    - Ordinary Differential Equations
    - Partial Differential Equations&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&#34;assessment&#34;&gt;Assessment&lt;/h2&gt;
&lt;h3 id=&#34;examination-type&#34;&gt;Examination Type&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Examination Type:&lt;/td&gt;
          &lt;td&gt;Module examination&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Assessment Type:&lt;/td&gt;
          &lt;td&gt;Written examination&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Scope:&lt;/td&gt;
          &lt;td&gt;All intended learning outcomes of this module&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Duration:&lt;/td&gt;
          &lt;td&gt;120 min&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Weight:&lt;/td&gt;
          &lt;td&gt;100%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You have three attempts to pass the module. Once you pass the module, no further retakes of the exam are possible. (See &lt;a href=&#34;https://constructor.university/student-life/student-services/university-policies/academic-policies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Policies&lt;/a&gt; for more details). The exams in this course are offered twice per year: firstly in May and then a resit in August.&lt;/p&gt;
&lt;p&gt;No supplementary material can be brought to the exam. A calculator is necessary however. Note that graphical and scientific calculators are permitted.&lt;/p&gt;
&lt;p&gt;The pass mark is 45%.&lt;/p&gt;
&lt;p&gt;Previous exams, as well as sample questions and solutions, can be found &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/exam/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;assignments&#34;&gt;Assignments&lt;/h3&gt;
&lt;p&gt;By submitting homework assignments, via &lt;em&gt;Teams&lt;/em&gt; as a single pdf, you can improve this grade by up to 0.66 points, as bonus achievements.&lt;/p&gt;
&lt;p&gt;Homework submission is voluntary, although highly recommended. It is possible to get a 100% final grade without submitting homework.&lt;/p&gt;
&lt;p&gt;Homework will be assigned approximately every two weeks. Homework assignments are posted on &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/assignments/&#34;&gt;here&lt;/a&gt; and on Teams approximately ten days before the due date.&lt;/p&gt;
&lt;p&gt;You are allowed to discuss homework between each other. However, the submitted assignments should be written individually. No copying is allowed!&lt;/p&gt;
&lt;p&gt;The two lowest homework scores will be deleted before the final quiz/homework score is computed. This rule covers short illness, excursions, late adding of the course, and similar situations.&lt;/p&gt;
&lt;p&gt;Note that each homework assignment carries equal marks.&lt;/p&gt;
&lt;p&gt;The problems on the final exam will be similar to the ones from homework. So, by doing homework you prepare for the final exam - maths is not a spectator sport.&lt;/p&gt;
&lt;h2 id=&#34;academic-integrity&#34;&gt;Academic Integrity&lt;/h2&gt;
&lt;p&gt;All involved parties (lecturers, instructors and students) are expected to abide by the word and spirit of the &lt;a href=&#34;https://constructor.university/student-life/student-services/university-policies/academic-policies/code-of-academic-integrity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Code of Academic Integrity&amp;rdquo;&lt;/a&gt;. Violations of the Code should be brought to the attention of the Academic Integrity Committee.&lt;/p&gt;
&lt;h2 id=&#34;artificial-intelligence-ai-use-policy&#34;&gt;Artificial Intelligence (AI) Use Policy&lt;/h2&gt;
&lt;p&gt;This policy covers any generative AI tool, such as ChatGPT, Elicit, etc. This includes text, slides, artwork/graphics/video/audio and other products.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;You are discouraged from using AI tools &lt;em&gt;unless&lt;/em&gt; under direct instruction from your instructor to do so. Please contact your instructor if you are unsure or have questions &lt;em&gt;before&lt;/em&gt; using AI for any assignment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Note that the material generated by these programs may be inaccurate, incomplete, or otherwise problematic.  Their use may also stifle your own independent thinking and creativity. Accordingly, reduction in the grade is likely when using AI.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If any part of this AI policy is confusing or uncertain, please reach out to your instructor for a conversation before submitting your work.&lt;/p&gt;
&lt;!--
1 Feb
7, 8
14, 15
21, 22
28, 29
6, 7 March
13, 14
20, 21
3, 4 April
10, 11
17, 18
24, 25 - linear algebra
29 - interpolation
2 May - odes
10 May - odes
15 May  revision

https://towardsdatascience.com/numerical-integration-romberg-integration-3f54002ab538
https://francisbach.com/richardson-extrapolation/
https://home.uni-leipzig.de/physik/sites/mona/wp-content/uploads/sites/3/2017/07/Lecture07-CurveFitting.pdf
--&gt;
</description>
    </item>
    
    <item>
      <title>Taylor Series</title>
      <link>https://djps.github.io/docs/numericalmethods24/part1/taylor/</link>
      <pubDate>Thu, 07 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part1/taylor/</guid>
      <description>&lt;!--
&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54); border-top: 1px solid #e8e8e8; margin-top: 30px; padding-top: 10px; border-bottom: 1px solid #e8e8e8; margin-bottom: 30px; padding-bottom: 10px;&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; March 11, 2022 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 45 minute read &lt;/p&gt;


&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54);&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; December 07, 2023 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 15 minute read &lt;/p&gt;
--&gt;
&lt;p&gt;The Taylor series, or Taylor expansion of a function, is defined as&lt;/p&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Taylor Series&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\begin{equation*}
\sum\limits_{k=0}^{\infty} \dfrac{ f^{(k)} \left( c \right) }{k!} \left( x - c \right)^{k}.
\end{equation*}
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;This is a power series, which is convergent for some radius.&lt;/p&gt;
&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Taylor&amp;#39;s Theorem&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\begin{equation*}
f\left( x \right) = \sum\limits_{k=0}^{n} \dfrac{f^{(k)} \left(c\right) }{k!} \left( x- c \right)^{k} + \dfrac{f^{(n+1)} \left( \xi \right) }{\left( n + 1 \right)!} \left( x - c \right)^{n+1}
\end{equation*}
$$$$
\begin{equation*}
\lim\limits_{\xi \rightarrow c} \dfrac{ f^{(n+1)} \left( \xi \right) }{ \left( n + 1 \right)!} \left( x - c \right)^{n+1} = 0.
\end{equation*}
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of the Taylor series for $\sin\left(x\right)$ can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/taylor_series/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/taylor_series.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/taylor_series.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Rolle&amp;#39;s Theorem&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
f^\prime (c) = 0.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Mean Value Theorem&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
f^\prime (c) = \dfrac{f(b) - f(a)}{b - a}.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




</description>
    </item>
    
    <item>
      <title>Number Representations</title>
      <link>https://djps.github.io/docs/numericalmethods24/part1/number-representations/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part1/number-representations/</guid>
      <description>&lt;!--
&lt;style&gt;
mjx-container {
  display: inline-block;
}
mjx-assistive-mml {
  right: 0px;
  bottom: 0px;
}
&lt;/style&gt;


&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54); border-top: 1px solid #e8e8e8; margin-top: 30px; padding-top: 10px; border-bottom: 1px solid #e8e8e8; margin-bottom: 30px; padding-bottom: 10px;&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; March 11, 2022 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 45 minute read &lt;/p&gt;


&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54);&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; January 05, 2024 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 25 minute read &lt;/p&gt;
--&gt;
&lt;h2 id=&#34;errors&#34;&gt;Errors&lt;/h2&gt;
&lt;p&gt;There are many different sources of errors which can affect numerical methods, such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Errors in data&lt;/li&gt;
&lt;li&gt;Round-off errors&lt;/li&gt;
&lt;li&gt;Truncation errors&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Absolute and Relative Errors&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Let $\tilde{a}$ be an approximation to $a$, then the &lt;strong&gt;absolute error&lt;/strong&gt; is given by $\left| {\tilde{a}-a} \right|$.&lt;/p&gt;
&lt;p&gt;If ${\left| a \ne 0\right|}$, the &lt;strong&gt;relative error&lt;/strong&gt; is given by $\left| \dfrac{\tilde{a}-a}{a} \right|$ and the error bound is the magnitude of the admissible error.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;For both addition and subtraction the bounds for the &lt;em&gt;absolute error&lt;/em&gt; are added.&lt;/p&gt;
&lt;p&gt;In division and multiplication the bounds for the &lt;em&gt;relative errors&lt;/em&gt; are added.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Linear Sensitivity to Uncertainties&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;If $y(x)$ is a smooth function, i.e. is differentiable, then $\left\| y^{\prime} \right\|$ can be interpreted as the &lt;strong&gt;linear sensitivity&lt;/strong&gt; of $y(x)$ to uncertainties in $x$.&lt;/p&gt;
$$
\left\| \Delta y \right\| \le \sum\limits_{i=1}^{n}\left\| \dfrac{\partial y}{\partial x_i} \right\|\left\| \Delta x_i \right\|
$$&lt;p&gt;
where
$\left\| \Delta x_i \right\| = \tilde{x}_i - x_i$ for an approximation $\tilde{x}_i$, thus  ${\left\| \Delta y_i \right\| = \tilde{y}_i - y_i = f \left( \tilde{x}_i \right) - \left( x_i \right)}$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of errors and number representations can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/number_representations/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/number_representations.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/number_representations.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h2 id=&#34;number-representations&#34;&gt;Number Representations&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Base Representation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\begin{equation*}
\left(x\right)_b = a_0 b^0 + a_1 b^1 + \ldots + a_n b^n = \sum \limits_{i=0}^{n} a_i b^i
\end{equation*}
$$&lt;p&gt;
A number can be written in a nested form:&lt;/p&gt;
$$
\begin{align*}
\left(x\right)\_b &amp; = a_0 b^0 + a_1 b^1 + \ldots + a_n b^n \\\
 &amp; = a_0 + b\left( a_1 + b\left( a_2 + b\left( a_3 + \ldots + b a_n\right) \right. \ldots  \right)
\end{align*}
$$&lt;p&gt;with $a_i \in \mathbb{N}_0$ and $a_i &lt; b$, i.e. ${a_i \in \lbrace 0, \ldots, b-1 \rbrace }$.&lt;/p&gt;
&lt;p&gt;For a real number, ${x \in \mathbb{R}}$, write&lt;/p&gt;
$$
\begin{align*}
x &amp; = \sum \limits_{i=0}^{n} a_i b^i + \sum \limits_{i=1}^{\infty} \alpha_i b^{-i} \\\
 &amp; = a_n  \ldots a_0 \cdot \alpha_1 \alpha_2 \ldots
\end{align*}
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Algorithm open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 640 512&#34;&gt;&lt;path stroke=&#34;currentColor&#34; d=&#34;M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z&#34;/&gt;&lt;/svg&gt;

        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Algorithm: &lt;em&gt;Euclid&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Euclid&amp;rsquo;s algorithm can convert number $x$ in base 10, i.e.
$\left(x \right)_{10}$
into another base, $b$, i.e. $\left(x \right)_{b}$.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Input $\left(x \right)_{10}$&lt;/li&gt;
&lt;li&gt;Determine the smallest integer $n$ such that ${x &lt; b^{n+1}}$&lt;/li&gt;
&lt;li&gt;Let $y=x$. Then for $i=n, \ldots, 0$
$$
      \begin{array}{rcl}
      a_i &amp; = &amp; y \text{ div } b^i \\\
      y &amp; = &amp; y \text{ mod } b^i
      \end{array}
      $$
which at each steps provides an $a_i$ and updates $y$.&lt;/li&gt;
&lt;li&gt;Output as $\left(x \right)\_{b} = a_n a_{n-1} \cdots a_0$&lt;/li&gt;
&lt;/ol&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Algorithm open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 640 512&#34;&gt;&lt;path stroke=&#34;currentColor&#34; d=&#34;M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z&#34;/&gt;&lt;/svg&gt;

        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Algorithm: &lt;em&gt;Horner&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;ol&gt;
&lt;li&gt;Input $\left(x \right)_{10}$&lt;/li&gt;
&lt;li&gt;Set $i=0$&lt;/li&gt;
&lt;li&gt;Let $y=x$. Then while $y&gt;0$
$$
      \begin{array}{rcl}
      a_i &amp; = &amp; y \text{ mod } b \\\
      y &amp; = &amp; y \text{ div } b \\\
      i &amp; = &amp; i+1
      \end{array}
      $$
which at each steps provides an $a_i$ and updates $y$.&lt;/li&gt;
&lt;li&gt;Output as $\left(x \right)_{b} = a_n a_{n-1} \cdots a_0$&lt;/li&gt;
&lt;/ol&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Floating Point Representations&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x = \sigma \times f \times b^{t-p}
$$&lt;p&gt;
where $\sigma$ is the sign of the number, i.e. $\pm 1$, $f$ is the mantissa, $b$ is the base, $t$ is the shifted exponent (where $p$ is the shift required to determine the actual exponent.)&lt;/p&gt;
$$x= \pm 0 \cdot a_1 \ldots a_k \times b^n$$&lt;p&gt;
where the $a_i \in \lbrace 0, 1, \ldots b-1 \rbrace$ are called the &lt;strong&gt;digits&lt;/strong&gt;, $k$ is the &lt;strong&gt;precision&lt;/strong&gt; and $n$ is the &lt;strong&gt;exponent&lt;/strong&gt;. The set $a_1, \ldots, a_k$ is called the &lt;strong&gt;mantissa&lt;/strong&gt;. Impose that $a_1 \ne 0$, it makes the representation unique.&lt;/p&gt;
&lt;p&gt;Alternative conventions may express $x= \pm  a_1 \cdot a_2 \ldots a_{k-1} \times b^n$, with $a_1 \ne 0$. Normalization refers to specifying the digits before the decimal place.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$2^{-p} \leq 1 - \dfrac{y}{x} \leq 2^{-q}$$&lt;p&gt;
then, at most $p$ and at least $q$ significant bits (i.e. significant figures written in base 2) are lost during subtraction.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




</description>
    </item>
    
    <item>
      <title>Linear Equations</title>
      <link>https://djps.github.io/docs/numericalmethods24/part1/linear-equations/</link>
      <pubDate>Mon, 20 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part1/linear-equations/</guid>
      <description>&lt;h2 id=&#34;linear-equations&#34;&gt;Linear Equations&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Systems of Linear Equations&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A system of linear equations (or linear system) is a collection of one or more linear equations involving the same variables. If there are $m$ equations with $n$ unknown variables to solve for&lt;/p&gt;
$$
\begin{align*}
a_{1,1} x_1 + a_{1,2} x_2 + \ldots + a_{1,n} x_n &amp; = b_1 \\
a_{2,1} x_1 + a_{2,2} x_2 + \cdots + a_{2,n} x_n &amp; = b_2 \\
\vdots &amp;  \\
a_{m,1} x_1 + a_{m,2} x_2 + \cdots + a_{m,n} x_n &amp; = b_m.
\end{align*}
$$&lt;p&gt;The system of linear equations can be written in matrix form ${Ax=b}$, where&lt;/p&gt;
$$
\begin{align*}
A = \left(
  \begin{array}{cccc}
  a_{1,1} &amp; a_{1,2} &amp; \cdots &amp; a_{1,n} \\
  a_{2,1} &amp; a_{2,2} &amp; \cdots &amp; a_{2,n} \\
  \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
  a_{m,1} &amp; a_{m,2} &amp; \cdots &amp; a_{m,n}
  \end{array}
  \right), \quad x = \left(
    \begin{array}{c}
    x_1 \\\
    x_2 \\\
    \vdots \\\
    x_n
    \end{array}
    \right), \quad b = \left(
      \begin{array}{c}
      b_1 \\
      b_2 \\
      \vdots \\
      b_m
      \end{array}
      \right),
\end{align*}
$$&lt;p&gt;
so that $A \in \mathbb{R}^{m \times n}$, $x \in \mathbb{R}^n$ and $b \in \mathbb{R}^m$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Banded Systems&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A &lt;strong&gt;banded&lt;/strong&gt; matrix is a matrix whose non-zero entries are confined to a diagonal band, comprising the main diagonal and zero or more diagonals on either side.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Symmetric Matrices&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A square matrix $A$ is &lt;strong&gt;symmetric&lt;/strong&gt; if ${A=A^T}$, that is, $a_{i,j}=a_{j,i}$ for all indices $i$ and $j$.&lt;/p&gt;
&lt;p&gt;A square matrix is said to be &lt;strong&gt;Hermitian&lt;/strong&gt; if the matrix is equal to its conjugate transpose, i.e. $a_{i,j}=\overline{a_{j,i}}$ for all indices $i$ and $j$. A Hermitian matrix is written as $A=A^H$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Positive Definite Matrices&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A matrix, $M$, is said to be &lt;strong&gt;positive definite&lt;/strong&gt; if it is symmetric (or Hermitian) and all its eigenvalues are real and positive.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Nonsingular Matrices&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A matrix is &lt;strong&gt;non-singular&lt;/strong&gt; or &lt;strong&gt;invertible&lt;/strong&gt; if there exists a matrix $A^{-1}$ such that ${A^{-1}A = A A^{-1} = I,}$ where $I$ is the identity matrix.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Note open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m16.862 4.487l1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Note: &lt;em&gt;Properties of Nonsingular Matrices&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;For a nonsingular matrix, the following all hold:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nonsingular matrix has full rank&lt;/li&gt;
&lt;li&gt;A square matrix is nonsingular if and only if the determinant of the matrix is non-zero.&lt;/li&gt;
&lt;li&gt;If a matrix is singular, both versions of Gaussian elimination will fail due to division by zero, yielding a floating exception error.&lt;/li&gt;
&lt;/ul&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            If $\tilde{x}$ is an approximate solution to the linear problem ${Ax=b}$, then the &lt;strong&gt;residual&lt;/strong&gt; is defined as ${r = A \tilde{x}-b}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;direct-methods&#34;&gt;Direct Methods&lt;/h3&gt;
&lt;div class=&#34;details admonition Algorithm open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 640 512&#34;&gt;&lt;path stroke=&#34;currentColor&#34; d=&#34;M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z&#34;/&gt;&lt;/svg&gt;

        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Algorithm: &lt;em&gt;Gaussian Elimination&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Gaussian elimination is a method to solve systems of linear equations based on forward elimination (a series of row-wise operations) to convert the matrix, $A$, to upper triangular form (echelon form), and then back substitution to solve the system. The row operations are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;row swapping&lt;/li&gt;
&lt;li&gt;row scaling, i.e. multiplying by a non-zero scalar&lt;/li&gt;
&lt;li&gt;row addition, i.e. adding a multiple of one row to another&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Forward elimination is written as&lt;/p&gt;
&lt;p&gt;&lt;small&gt;1 &lt;/small&gt; For $k=1$ to $n-1$: &lt;br&gt;
&lt;small&gt;2 &lt;/small&gt; $\hspace{2cm}$ For $i = k + 1$ to $n$: &lt;br&gt;
&lt;small&gt;3 &lt;/small&gt; $\hspace{4cm}$ For $j = k$ to $n$: &lt;br&gt;
&lt;small&gt;4 &lt;/small&gt; $\hspace{6cm}  a_{i,j} = a_{i,j} - \dfrac{a_{i,k}}{a_{k,k}} a_{k,j}$ &lt;br&gt;
&lt;small&gt;5 &lt;/small&gt; $\hspace{4cm}$ End &lt;br&gt;
&lt;small&gt;6 &lt;/small&gt; $\hspace{2cm} b_{i} = b_{i} - \dfrac{a_{i,k}}{a_{k,k}} b_{k}$ &lt;br&gt;
&lt;small&gt;7 &lt;/small&gt; End &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Then back substitute, starting with the last unknown first:&lt;/p&gt;
&lt;p&gt;&lt;small&gt;8 &lt;/small&gt; Set $x_n = \dfrac{b_n}{a_{n,n}}$ &lt;br&gt;
&lt;small&gt;9 &lt;/small&gt; For $i$ =$n-1$ to $1$: &lt;br&gt;
&lt;small&gt;10&lt;/small&gt; $\hspace{2cm} y = b_i$ &lt;br&gt;
&lt;small&gt;11&lt;/small&gt; $\hspace{2cm}$ For $j = n$ to $i+1$: &lt;br&gt;
&lt;small&gt;12&lt;/small&gt; $\hspace{4cm} y = y - a_{i,j} x_j$ &lt;br&gt;
&lt;small&gt;13&lt;/small&gt; $\hspace{2cm}$ End &lt;br&gt;
&lt;small&gt;14&lt;/small&gt; $\hspace{2cm} x_i = \dfrac{y}{a_{i,i}}$ &lt;br&gt;
&lt;small&gt;15&lt;/small&gt; End&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Algorithm open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 640 512&#34;&gt;&lt;path stroke=&#34;currentColor&#34; d=&#34;M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z&#34;/&gt;&lt;/svg&gt;

        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Algorithm: &lt;em&gt;Gaussian Elimination with Scaled Partial Pivoting&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A pivot element is the element of a matrix, $A$, which is selected to do certain calculations first. Pivoting helps reduce errors due to rounding.&lt;/p&gt;
&lt;p&gt;&lt;small&gt;1 &lt;/small&gt; Find maximal absolute values vector $s$ with entries $s_i= \max_{j=1,\ldots,n}\left| a_{i,j}\right|$ &lt;br&gt;
&lt;small&gt;2 &lt;/small&gt; For $k=1$ to $n-1$: &lt;br&gt;
&lt;small&gt;3 &lt;/small&gt; $\hspace{2cm}$ For $i = k$ to $n$: &lt;br&gt;
&lt;small&gt;4 &lt;/small&gt; $\hspace{4cm}$ Compute $\left| \dfrac{a_{i,k}}{s_i} \right|$ &lt;br&gt;
&lt;small&gt;5 &lt;/small&gt; $\hspace{2cm}$ End &lt;br&gt;
&lt;small&gt;6 &lt;/small&gt; $\hspace{2cm}$ Find row with largest relative pivot element, denote this as row $j$ &lt;br&gt;
&lt;small&gt;7 &lt;/small&gt; $\hspace{2cm}$ Swap rows $k$ and $j$ &lt;br&gt;
&lt;small&gt;8 &lt;/small&gt; $\hspace{2cm}$ Swap entries $k$ and $j$ in vector $s$ &lt;br&gt;
&lt;small&gt;9 &lt;/small&gt; $\hspace{2cm}$ Do forward elimination on row $k$ &lt;br&gt;
&lt;small&gt;10&lt;/small&gt; End &lt;br&gt;&lt;/p&gt;
&lt;p&gt;The matrix will be in row-echelon form, so that back substitution can now be performed.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Upper and Lower Triangular Matrices&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A square matrix is said to be &lt;strong&gt;lower triangular matrix&lt;/strong&gt; if all the elements above the main diagonal are zero and &lt;strong&gt;upper triangular&lt;/strong&gt; if all the entries below the main diagonal are zero.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;$LU$-Decomposition&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
L = U_1^{-1} U_2^{-1} \cdots U_{n-1}^{-1}
$$$$
U = U_{n-1} \cdots U_2 U_1 A.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Cholesky-Decomposition&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A symmetric, positive definite matrix can be decomposed as $A=\tilde{L}\tilde{L}^T$, where ${\tilde{L} = L D^{1/2}}$, where $D$ is a diagonal matrix whose elements $d_i$ are all positive, so that $D^{1/2}$ has diagonal elements $\sqrt{d_i}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Algorithm open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 640 512&#34;&gt;&lt;path stroke=&#34;currentColor&#34; d=&#34;M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z&#34;/&gt;&lt;/svg&gt;

        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Algorithm: &lt;em&gt;Cholesky Algorithm&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Cholesky&amp;rsquo;s algorithm to compute the entries of the triangular matrix $L$ can be written as&lt;/p&gt;
&lt;p&gt;&lt;small&gt;1 &lt;/small&gt; For $i=1$ to $n$: &lt;br&gt;
&lt;small&gt;2 &lt;/small&gt; $\hspace{2cm}$ For $j = 1$ to $i-1$: &lt;br&gt;
&lt;small&gt;3 &lt;/small&gt; $\hspace{4cm}$ Set $y = a_{i,j}$ &lt;br&gt;
&lt;small&gt;4 &lt;/small&gt; $\hspace{4cm}$ For $k = 1$ to $j-1$: &lt;br&gt;
&lt;small&gt;5 &lt;/small&gt; $\hspace{6cm}$ $y = y - l_{i,k} l_{j,k}$ &lt;br&gt;
&lt;small&gt;6 &lt;/small&gt; $\hspace{4cm}$ End &lt;br&gt;
&lt;small&gt;7 &lt;/small&gt; $\hspace{4cm}$ $l_{i,j} = y / l_{j,j}$ &lt;br&gt;
&lt;small&gt;8 &lt;/small&gt; $\hspace{2cm}$ End &lt;br&gt;
&lt;small&gt;9 &lt;/small&gt; $\hspace{2cm}$ Set $y = a_{i,i}$ &lt;br&gt;
&lt;small&gt;10&lt;/small&gt; $\hspace{2cm}$ For $k= 1$ to $i-1$: &lt;br&gt;
&lt;small&gt;11&lt;/small&gt; $\hspace{4cm}$ $y = y - l_{i,k} l_{i,k}$ &lt;br&gt;
&lt;small&gt;12&lt;/small&gt; $\hspace{2cm}$ End &lt;br&gt;
&lt;small&gt;13&lt;/small&gt; $\hspace{2cm}$ If $y \le 0$: &lt;br&gt;
&lt;small&gt;14&lt;/small&gt; $\hspace{4cm}$ exit as there is no solution &lt;br&gt;
&lt;small&gt;15&lt;/small&gt; $\hspace{2cm}$ Else: &lt;br&gt;
&lt;small&gt;16&lt;/small&gt; $\hspace{4cm}$ $l_{i,i} = \sqrt{y}$ &lt;br&gt;
&lt;small&gt;12&lt;/small&gt; $\hspace{2cm}$ End &lt;br&gt;
&lt;small&gt;17&lt;/small&gt; End &lt;br&gt;&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;indirect-methods&#34;&gt;Indirect Methods&lt;/h3&gt;
$$
Q x_{k +1}= \left( Q - A \right) x_{k} + b.
$$&lt;p&gt;This is equivalent to&lt;/p&gt;
$$
x_{k +1} = \left( I - Q^{-1} A \right) x_{k} + Q^{-1} b.
$$&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Spectral Radius of a Matrix&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\rho \left( A \right) = \max \left\{  \left|  \lambda_1 \right|,  \left|  \lambda_2 \right|, \ldots   \left|  \lambda_n \right| \right\}
$$&lt;p&gt;
where the $\lambda_i$ are the eigenvalues of the matrix.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Convergence&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            The iterative scheme converges if and only if the spectral radius of the matrix ${I - Q^{-1} A}$ is less than one, i.e. ${\rho\left( I - Q^{-1} A \right) \lt 1}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Richardson Iteration&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x_{k +1} = \left(I - A \right) x_{k} + b.
$$&lt;p&gt;
This sequence may converge to $x = A^{-1} b$, depending on $A$.&lt;/p&gt;
$$
x_{k +1}=  x_{k} + \omega \left( b - A x_{k} \right).
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Jacobi Iteration&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x_{k +1} = \left(I - D^{-1} A \right) x_{k} + D^{-1} b.
$$&lt;p&gt;
where $D$ is the matrix comprised of the diagonal elements of $A$.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Diagonally Dominant Matrices&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\left| a_{i,i} \right| \ge \sum\limits_{\substack{j=1,\newline{}j \neq i}}^n \left| a_{i,j} \right| \quad \text{for all } i \in (1,n)
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Convergence of Jacobi Scheme&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            If the matrix $A$ is diagonally dominant, then the Jacobi scheme converges for any initial guess $x_0$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Gauss-Seidel Scheme&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\begin{equation*}
(D + L) x_{k+1} = -U x_{k} + b
\end{equation*}
$$&lt;p&gt;
where $L$ is the lower triangular part of $A$, and $D$ is the diagonal matrix of $A$.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Convergence of Gauss-Seidel Scheme&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            If the matrix $A$ is diagonally dominant, then the Gauss-Seidel scheme converges for any initial guess $x_0$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Successive Over Relaxation (SOR)&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\begin{equation*}
(D + \omega L) x_{k+1} = -\left( \left(\omega - 1 \right)D + \omega U \right) x_{k} + \omega b.
\end{equation*}
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Convergence of Successive Over Relaxation Scheme&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            Let $A$ be a symmetric matrix with positive entries on the diagonal and let ${\omega \in \left(0,2\right)}$. Then, if and only if $A$ is positive definite will the method of &lt;a href=&#34;#SOR&#34; style=&#34;text-decoration: underline; font-weight: 500; text-decoration-color: rgb(6, 78, 59); &#34;&gt;successive over relaxation&lt;/a&gt; converge.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;fundamental-theorem-of-numerical-analysis&#34;&gt;Fundamental Theorem of Numerical Analysis&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Stable&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A numerical method is said to be &lt;strong&gt;stable&lt;/strong&gt; if and only if any initial error $e_0$ is damped during the iterations, i.e. ${\left\| e_k \right\| &lt; \left\| e_0 \right\| }$.&lt;/p&gt;
&lt;p&gt;Note that $\Vert x \Vert $ is a &lt;em&gt;norm&lt;/em&gt; of a vector, such as ${\Vert x \Vert_2 = \sqrt{x_0^2 + x_1^2 + \ldots + x_n^2} }$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Consistent&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A numerical method is said to be &lt;strong&gt;consistent&lt;/strong&gt; if any fixed point $x^{\ast}$ of the iteration is a solution to the problem being solved.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




$$
x^{\ast} = \left( I - Q^{-1} A \right) x^{\ast} + Q^{-1} b \Leftrightarrow A x^{\ast} = b.
$$&lt;p&gt;If the iterative method for a linear system is stable then&lt;/p&gt;
$$
e_k = \left( I - Q^{-1} A \right)^k e_0,
$$&lt;p&gt;
so then ${\Vert I - Q^{-1} A \Vert &lt; 1}$ for ${\Vert e_k \Vert &lt; \Vert e_0 \Vert}$, where ${\Vert I - Q^{-1} A \Vert}$ is a &lt;em&gt;matrix norm&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Convergent&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A numerical method is said to be &lt;strong&gt;convergent&lt;/strong&gt; if ${x_k \rightarrow x^{\ast}}$ as ${k \rightarrow \infty}$ where $x^{\ast}$ is the exact solution.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Fundamental Theorem of Numerical Analysis&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A numerical method is convergent if and only if it is consistent and stable.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of iterative solvers for linear systems can be accessed online &lt;a class=&#34;hover:red&#34; href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/iterative/&#34; style=&#34;text-decoration: underline; font-weight: 500; text-decoration-color: #651fff;&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a class=&#34;underline text-red-600 hover:text-red-800 visited:text-red-600 dark:text-red-300 dark:hover:text-red-200&#34; href=&#34;https://djps.github.io/ipyth/iterative.py/&#34; &gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/iterative.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




</description>
    </item>
    
    <item>
      <title>Nonlinear Equations</title>
      <link>https://djps.github.io/docs/numericalmethods24/part1/nonlinear-equations/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part1/nonlinear-equations/</guid>
      <description>&lt;!--
&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54);&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; March 11, 2024 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 45 minute read &lt;/p&gt;
--&gt;
&lt;h2 id=&#34;root-finding&#34;&gt;Root Finding&lt;/h2&gt;
&lt;h3 id=&#34;bisection-method&#34;&gt;Bisection Method&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Bisection Method&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;The bisection method, when applied in the interval $\left[a, b\right]$ to a function $f \in C^0 \left( \left[a, b\right] \right)$ with ${f(a)f(b) &lt; 0}$&lt;/p&gt;
&lt;p&gt;Bisect the interval into two subintervals $\left[a, c\right]$ and $\left[c, b\right]$ such that ${a &lt; c &lt; b}$.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If $f(c) = 0$ or is sufficiently close, then $c$ is a root&lt;/li&gt;
&lt;li&gt;Else, if $f(c)f(a) &lt; 0$ continue in the interval $[a, c]$&lt;/li&gt;
&lt;li&gt;Else, if $f(c)f(b) &lt; 0$ continue in the interval $[c, b]$&lt;/li&gt;
&lt;/ul&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Bisection Method&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\left\| r - c_n \right\| \lt \dfrac{b-a}{2n}.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;newtons-method&#34;&gt;Newton&amp;rsquo;s Method&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x_{n+1} = x_n - \dfrac{f\left( x_n \right)}{f\left( x_n \right)}.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            When Newton&amp;rsquo;s method converges, it converges to a root, $r$, of $f$, i.e. ${f\left(r\right)=0}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Let $f \in C^1\left( \left[ a, b\right] \right)$, with&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$f(a)f(b) &lt; 0$&lt;/li&gt;
&lt;li&gt;$f^\prime\left(x\right) \ne 0$ for all $x \in \left( a, b \right)$&lt;/li&gt;
&lt;li&gt;$f^{\prime\prime}\left(x\right) $ exists, is continuous and either ${f^{\prime\prime}\left(x\right)  &gt; 0}$ or ${f^{\prime\prime}\left(x\right) &lt; 0}$ for all ${x \in \left( a, b \right)}$.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then $f(x)=0$ has exactly one root, $r$, in the interval and the sequence generated by Newton iterations converges to the root when the initial guess is chosen according to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if $f(a) &lt; 0$ and $f^{\prime\prime}(a) &lt; 0$ &lt;em&gt;or&lt;/em&gt; $f(a) &gt; 0$ and $f^{\prime\prime}(a) &gt; 0$ then $x \in \left[ a, r \right]$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if $f(a) &lt; 0$ and $f^{\prime\prime}(a) &gt; 0$ &lt;em&gt;or&lt;/em&gt; $f(a) &gt; 0$ and $f^{\prime\prime}(a) &lt; 0$ then $x \in \left[ r, b \right]$.&lt;/li&gt;
&lt;/ul&gt;
$$
\left\| x_n - r\right\| \lt \dfrac{f\left( x_n \right)}{\min \limits_{x \in [a,b]}\left\| f^{\prime}\left( x \right) \right\|}.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Let $f \in C^1\left( \left[ a, b\right] \right)$, with&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$f(a)f(b) &lt; 0$&lt;/li&gt;
&lt;li&gt;$f^\prime\left( x \right) \ne 0$ for all $x \in \left( a, b \right)$&lt;/li&gt;
&lt;li&gt;$f^{\prime\prime}\left( x \right)$ exists and is continuous, i.e. ${f\left( x \right) \in C^2\left( \left[ a, b \right]\right)}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then, if $x_0$ is close enough to the root $r$, Newton&amp;rsquo;s method converges quadratically.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;secant-methods&#34;&gt;Secant Methods&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x_{n+1} = x_n - f \left( x_n \right) \dfrac{x_{n-1} - x_n}{f \left( x_{n-1} \right) - f \left( x_n \right)}.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x_{n+1} = x_n - f \left( x_n \right) \dfrac{x_{n-1} - x_n}{f \left( x_{n-1} \right) - f \left( x_n \right)}.
$$&lt;p&gt;
Then there exists a $\delta &gt; 0$ such that when ${\left\|  r - x_0 \right\| &lt; \delta}$ and ${\left\|  r - x_1 \right\| &lt; \delta}$, then the following holds:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$\lim\limits_{n\rightarrow\infty} \left\|  r - x_n \right\| = 0 \Leftrightarrow \lim\limits_{n\rightarrow\infty} x_n = r$,
and&lt;/li&gt;
&lt;li&gt;$\left\|  r - x_{n+1} \right\| \le \mu \left\|  r - x_{n} \right\|^{\alpha}$ with ${\alpha =\dfrac{1+\sqrt{5}}{2} }.$&lt;/li&gt;
&lt;/ol&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of iterative solvers for nonlinear systems can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/nonlinear/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/nonlinear.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/nonlinear.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example using the secant method to find a local maxima can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/max_finder/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/max_finder.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/max_finder.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h2 id=&#34;convergence&#34;&gt;Convergence&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\lim\limits_{n\rightarrow\infty} \dfrac{\left\| x_{n+1} - r \right\|}{\left\| x_{n} - r \right\|} = \mu.
$$$$
\lim\limits_{n\rightarrow\infty} \dfrac{\left\| x_{n+1} - r \right\|}{\left\| x_{n} - r \right\|} = 0
$$$$
\lim\limits_{n\rightarrow\infty} \dfrac{\left\| x_{n+1} - r \right\|}{\left\| x_{n} - r \right\|} = 1.
$$$$
\lim\limits_{n\rightarrow\infty} \dfrac{\left\| x_{n+1} - r \right\|}{\left\| x_{n} - r \right\|^q } = \mu
$$&lt;p&gt;
Thus a sequence is said to converge quadratically when ${q=2}$ and exhibit cubic convergence when $q=3$.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Method&lt;/th&gt;
          &lt;th&gt;Regularity&lt;/th&gt;
          &lt;th&gt;Proximity to $r$&lt;/th&gt;
          &lt;th&gt;Initial points&lt;/th&gt;
          &lt;th&gt;Function calls&lt;/th&gt;
          &lt;th&gt;Convergence&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Bisection&lt;/td&gt;
          &lt;td&gt;$\mathcal{C}^{0}$&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;Linear&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Newton&lt;/td&gt;
          &lt;td&gt;$\mathcal{C}^{2}$&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;Quadratic&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Secant&lt;/td&gt;
          &lt;td&gt;$\mathcal{C}^{2}$&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;Superlinear&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;systems-of-nonlinear-equation&#34;&gt;Systems of Nonlinear Equation&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Multi-dimensional Newton Method&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
x= \left( x_1, x_2 \ldots, x_n \right) \in \mathbb{R}^n
$$&lt;p&gt;
the &lt;strong&gt;Jacobian&lt;/strong&gt; matrix is defined as&lt;/p&gt;
$$
\begin{equation*}
J = \left(
  \begin{array}{cccc}
  \dfrac{\partial f_1 }{\partial x_1} &amp; \dfrac{\partial f_1 }{\partial x_2} &amp; \cdots &amp; \dfrac{\partial f_1 }{\partial x_n} \\\
  \dfrac{\partial f_2 }{\partial x_1} &amp; &amp; &amp; \vdots \\\
  \vdots &amp; &amp; &amp; \vdots \\\
  \dfrac{\partial f_n }{\partial x_1} &amp; \dfrac{\partial f_n }{\partial x_2} &amp; \cdots &amp; \dfrac{\partial f_n }{\partial x_n}
  \end{array}
  \right) \in \mathbb{R}^{n \times n}.
  \end{equation*}
$$$$
x_{m+1} = x_m - J^{-1} \left( x_m \right) f\left( x_m \right)
$$$$
J \left( x_m \right) \left( x_{m+1} - x_m \right) = -f \left( x_m \right)
$$&lt;p&gt;
is solved for the unknown vector $x_{m+1} - x_m$ and then $x_{m+1}$ is found.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!--
```markmap
- Numerical Methods
  - Errors
    - [Taylor Series](/docs/numericalmethods24/part1/taylor/)
    - [Number Representations](docs/numericalmethods24/part1/number-representations/)
  - Algebraic Equations
    - Linear Equations
      - [Direct Methods](/docs/numericalmethods24/part1/linear-equations/#direct-methods)
        - Gaussian Elimination
        - Partial Pivoting
        - LU Decomposition
        - Cholesky Decomposition
      - [Iterative Methods](/docs/numericalmethods24/part1/linear-equations/#indirect-methods)
        - Jacobi
        - Gauss-Seidel
        - SOR
    - [Nonlinear Equations](/docs/numericalmethods24/part1/nonlinear-equations/)
      - Bisection Method
      - Newton Method
      - Secant Method
  - Approximations
    - [Interpolation](/docs/numericalmethods24/part2/interpolation/)
      - Polynomial
      - Lagrange
      - Newton
      - $b$-splines
    - [Integration](/docs/numericalmethods24/part2/integration/#numerical-integration)
      - Simpson
      - Trapezium
      - Romberg Algorithm
      - Gaussian Quadrature
  - [Differential Equations](/docs/numericalmethods24/part3/odes/)
    - Difference Schemes
    - Ordinary Differential Equations
    - Partial Differential Equations
```
--&gt;
</description>
    </item>
    
    <item>
      <title>Integration</title>
      <link>https://djps.github.io/docs/numericalmethods24/part2/integration/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part2/integration/</guid>
      <description>&lt;!--
&lt;style&gt;
mjx-container {
  display: inline-block;
}
mjx-assistive-mml {
  right: 0px;
  bottom: 0px;
}
&lt;/style&gt;

&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54);&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; March 11, 2024 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 45 minute read &lt;/p&gt;
--&gt;
&lt;h2 id=&#34;numerical-differentiation&#34;&gt;Numerical Differentiation&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Finite-Difference Quotients&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Consider the approximations to the first-order derivative:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Forward Difference Quotient:&lt;/strong&gt;
$$
\begin{equation*}
D_{j}^{+} u = \dfrac{u_{j+1} - u_j}{h}
\end{equation*}
$$&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Backwards Difference Quotient:&lt;/strong&gt;
$$
\begin{equation*}
D_{j}^{-} u = \dfrac{u_{j} - u_{j-1}}{h}
\end{equation*}
$$&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Central Difference Quotient:&lt;/strong&gt;
$$
\begin{equation*}
D_{j}^{0} u = \dfrac{u_{j+1} - u_{j-1}}{2h}
\end{equation*}
$$
The forward and backwards difference schemes are first order approximations to the derivative. The central difference scheme is a second order accurate approximation.&lt;/li&gt;
&lt;/ol&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Higher Order Derivatives&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
f^{\prime\prime} \left( x \right) = \dfrac{ f(x - h) - 2 f (x) + f(x+h)}{h^2} + \mathcal{O} \left( h^2 \right) .
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Richardson Extrapolation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;&lt;a id=&#34;richardson&#34; style=&#34;font-weight:400; text-decoration:none; color:var(--tw-prose-body);&#34;&gt;This is a method for deriving higher order approximations for derivatives from lower order approximations.&lt;/a&gt; Consider a first-order approximation to the derivative, $\varphi\left(h\right)$, such as backwards or forwards differencing, then&lt;/p&gt;
$$
f^{\prime}\left( x \right) = \varphi\left(h\right) + a_2 h^2 + a_3 h^3 + \ldots
$$&lt;p&gt;Now evaluate the derivative at ${h=h/2}$, so that&lt;/p&gt;
$$
f^{\prime}\left( x \right) = \varphi \left( h \right) + a_2 \left( \dfrac{h}{2} \right)^2 + a_3 \left( \dfrac{h}{2} \right)^3 + \ldots
$$&lt;p&gt;Combining the two terms so that the low order term cancel, i.e. via ${f^{\prime}\left( x \right) - 4 f^{\prime}\left( x \right)}$, then a better approximation can be found as&lt;/p&gt;
$$
f^{\prime}\left( x \right) = \varphi \left( h \right) - 4 \varphi \left( \dfrac{h}{2} \right) + \mathcal{O}\left(h^3\right).
$$&lt;p&gt;The process can also be applied to second order accurate schemes, such as central differencing, to produce more accurate approximations. The method can also be applied to higher order derivatives.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h2 id=&#34;numerical-integration&#34;&gt;Numerical Integration&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Riemann Sum&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Create a partition, $p$, of the domain of integration: define $n+1$ nodes ${a = x_0 &lt; x_1 &lt; \ldots &lt; x_n =b}$, so that there are $n$ sub-intervals $\left[x_i, x_{i+1} \right]$.
Then approximate the area under the curve by summing the areas in each subinterval defined as&lt;/p&gt;
$$
\int\limits_{a}^{b}f\left( x\right) \, \mathrm{d}x \approx \sum\limits_{i=0}^{n-1} \left( x_{i+1} -x_i \right) f\left( x^{\ast} \right) \quad \textsf{where} \quad x^{\ast} \in \left[x_i, x_{i+1} \right].
$$&lt;p&gt;If $f$ is continuous, the value of $x_{i}^{\ast}$ may be chosen arbitrarily in the interval $\left[ x_i, x_{i+1} \right]$. Then the &lt;strong&gt;lower&lt;/strong&gt; and &lt;strong&gt;upper Riemann sums&lt;/strong&gt; are given by&lt;/p&gt;
$$
\begin{align*}
L\left(f, p\right) = &amp; \sum\limits_{i=0}^{n-1} \left( x_{i+1} - x_i \right) m_i \quad \textsf{where} \quad  m_i = \min_{x\in\left[ x_i, x_{i+1} \right]} f\left(x \right), \\
U\left(f, p\right) = &amp; \sum\limits_{i=0}^{n-1} \left( x_{i+1} - x_i \right) M_i \quad \textsf{where} \quad  M_i = \max_{x\in\left[ x_i, x_{i+1} \right]} f\left(x \right)
\end{align*}
$$$$
L\left(f, p\right) \le \int_{a}^{b} f\left(x \right) \, \mathrm{d}x \le U\left(f, p\right).
$$$$
\begin{align*}
&amp; \sum\limits_{i=0}^{n-1} \left( x_{i+1} -x_i \right) f\left(x_{i-1} \right), \\
&amp; \sum\limits_{i=0}^{n-1} \left( x_{i+1} -x_i \right) f\left(x_{i} \right).
\end{align*}
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Trapezoidal Rule&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\int\limits_{a}^{b}f\left( x\right) \mathrm{d}x \approx \sum\limits_{i=0}^{n-1} \left( x_{i+1} - x_i \right) \dfrac{ f\left( x_{i} \right) + f\left( x_{i+1} \right)}{2}.
$$$$
T\left(f,p\right) = \dfrac{h}{2} \left( f\left(x_0 \right) + f\left(x_n \right) \right) + h \sum\limits_{i=1}^{n-2}f\left( x_{i} \right).
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Error for Trapezoidal Rule&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Let ${f \in C^2\left( \left[a,b \right] \right)}$ and $p$ be equidistant partition of $\left[a,b \right]$, with ${h = x_{i+1} - x_i}$.&lt;/p&gt;
$$
\left| \int \limits_{a}^b f\left(x\right) \, \mathrm{d}x - T\left(f,p\right) \right| = a_2 h^2 + a_4 h^4 + \ldots
$$&lt;p&gt;that is, the error terms are even powers of the discretization.  More precisely, the error for the trapezium rule can be written as&lt;/p&gt;
$$
\left| \int_{a}^b f\left(x\right) \, \mathrm{d}x - T\left(f,p\right) \right| = \dfrac{1}{12} \left| \left(b - a\right) h^2 f^{\prime\prime}\left( \xi \right) \right|
$$&lt;p&gt;for some ${\xi \in \left(a, b\right)}$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Simpson&amp;#39;s Rule&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\int_a^b f\left( x\right) \, \mathrm{d}x \approx \dfrac{b-a}{6} \left( f\left(a\right) + 4 f\left(\dfrac{a+b}{2}\right) +f\left(b\right) \right).
$$&lt;p&gt;
Simpson&amp;rsquo;s rule uses interpolation with &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part2/interpolation/#polyinterp&#34;&gt;quadratic polynomials&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be applied in a composite manner, i.e. on many subdomains. It has an asymptotic error of $\mathcal{O}\left(h^4\right)$.&lt;/p&gt;
$$
\int_a^b f\left( x\right) \, \mathrm{d}x \approx \dfrac{h}{3} \left( f\left(a\right) + 4 f\left( a + h \right) +f\left(b\right) \right)
$$&lt;p&gt;
and is referred to as &lt;strong&gt;Simpson&amp;rsquo;s 1/3 Rule&lt;/strong&gt;. It uses quadratic interpolation of the function through the end and midpoints.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Algorithm open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 640 512&#34;&gt;&lt;path stroke=&#34;currentColor&#34; d=&#34;M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z&#34;/&gt;&lt;/svg&gt;

        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Algorithm: &lt;em&gt;Romberg&amp;#39;s Algorithm&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Romberg&amp;rsquo;s method uses the &lt;a href=&#34;#trap&#34;&gt;Trapezoidal Rule&lt;/a&gt; and then &lt;a href=&#34;#richardson&#34;&gt;Richardson Extrapolation&lt;/a&gt; to estimate integrals.
First consider a sequence of partitions, $p_i$, for ${i=0, \ldots, n}$, of equal spacing given by ${h_i = \dfrac{b-a}{2^i}}$ which yield a sequence of integrals
${R_i^0 = T_i \left( f, p_i \right)}$. Refinements of the integrals can then be produced by Richardson Extrapolation:&lt;/p&gt;
$$
\begin{array}{cc}
R_0^0 &amp;       \\
      &amp; R_1^1 \\
R_1^0 &amp;       \\
      &amp; R_2^1 \\
R_2^0 &amp;       \\
\vdots &amp; \\
R_n^0  &amp;
\end{array}
$$&lt;p&gt;To evaluate the next set of values, consider the two integrals&lt;/p&gt;
$$
\begin{align*}
\int_{a}^{b} f\left( x \right) \, \mathrm{d} x &amp; = R_{i-1}^0 + a_2 h^2 + a_4 h^4 + \ldots \\
\int_{a}^{b} f\left( x \right) \, \mathrm{d} x &amp; = R_{i}^0 + a_2 \left( \dfrac{h}{2} \right)^2 + a_4 \left( \dfrac{h}{2} \right)^4 + \ldots  
\end{align*}
$$$$
R_i^1 = \dfrac{1}{3} \left( 4 R_i^0 - R_{i-1}^0 \right).
$$$$
R_i^m = \dfrac{1}{4^m - 1} \left( 4^m R_i^{m-1} - R_{i-1}^{m-1} \right).
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of numerical integration using the Trapezium rule can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/integrals/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/integrals.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/integrals.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;gaussian-quadrature&#34;&gt;Gaussian Quadrature&lt;/h3&gt;
$$
\begin{equation*}
I_{n}[f] = \sum \limits_{i=0}^{n} A_{i} f\left( x_{i} \right).
\end{equation*}
$$&lt;p&gt;
The above equation is a weighted sum of the values of $f$ at the points $x_{i}$, for $i=0, \ldots, n$. These points are said to be the &lt;em&gt;nodes&lt;/em&gt; of the quadrature formula, while the  $A_{i} \in \mathbb{R}$ are its &lt;em&gt;coefficients&lt;/em&gt; or &lt;em&gt;weights&lt;/em&gt;. Both weights and nodes depend in general on $n$.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can the weights be chosen such that the error in an integral is minimized?&lt;/li&gt;
&lt;li&gt;Furthermore, can the nodes be chosen such that the integral can be further improved?&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Orthogonal functions&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Two real-valued functions $f(x)$ and $g(x)$ are said to be &lt;strong&gt;orthogonal&lt;/strong&gt; if&lt;/p&gt;
$$
\langle f, g \rangle = \int_a^b f(x) g(x) \mathrm{d} x = 0.
$$&lt;p&gt;where $\langle f, g \rangle$ satisfies the conditions to be an inner product.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;Gaussian Quadrature&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Let $q\left(x\right)$ be a non-trivial polynomial of degree ${n+1}$ such that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it has $n+1$ distinct roots, denoted as $x_i$, in $\left[ a, b \right]$,&lt;/li&gt;
&lt;li&gt;the polynomial $q(x)$ satisfies
$$
  \int_{a}^{b} x^k q\left(x\right) \, \mathrm{d}x = 0 \quad \textsf{for} \quad k=0,\ldots, n.
  $$
i.e. $q(x)$ is orthogonal to $x^k$.&lt;/li&gt;
&lt;/ol&gt;
$$
I_n\left[ f\right] = \int_{a}^{b} f\left(x\right) \, \mathrm{d}x = \sum\limits_{i=0}^n A_i  f\left( x_i \right)
$$&lt;p&gt;
with nodes given by the roots of the orthogonal polynomial $q$, and weights given by $A_i = \int_{a}^{b} l_i \left(x\right) \, \mathrm{d}x$, using &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part-2/interpolation/#interpolation&#34;&gt;Lagrange interpolation&lt;/a&gt; for all polynomials $f\left(x\right)$ of degree less than or equal to ${2n+1}$.&lt;/p&gt;
&lt;p&gt;Then, the integral $I_n\left[ f\right]$ integrates all polynomials of degree ${2n+1}$ &lt;em&gt;exactly&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It is said that the degree of exactness of $I\left[ f\right]$ is ${2n+1}$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Gauss-Legendre Quadrature&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\int_{-1}^1 P_m(x) P_n(x) \, \mathrm{d} x = 0 \quad \textsf{for} \quad n \ne m.
$$$$
P_n = \dfrac{2n-1}{n} x P_{n-1}(x) - \dfrac{n-1}{n} P_{n-2}(x) \quad \textsf{for} \quad n \ge 2.
$$&lt;p&gt;
Gauss-Legendre quadrature uses the roots of the Legendre polynomials as the nodes for integration, and weights may also be found by equating the quadrature expressions with the exact integrals for orders of $f(x)$, i.e. ${f(x)=1, x, x^2, \ldots}$&lt;/p&gt;
$$
x = \dfrac{b-a}{2} t + \dfrac{a+b}{2},
$$$$
\int_a^b f(x) \, \mathrm{d}x = \dfrac{b - a}{2} \int_{-1}^1 f\left( \dfrac{b-a}{2} t + \dfrac{a+b}{2}\right) \, \mathrm{d}t.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




</description>
    </item>
    
    <item>
      <title>Interpolation</title>
      <link>https://djps.github.io/docs/numericalmethods24/part2/interpolation/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part2/interpolation/</guid>
      <description>&lt;!--
&lt;style&gt;
mjx-container {
  display: inline-block;
}
mjx-assistive-mml {
  right: 0px;
  bottom: 0px;
}
&lt;/style&gt;


&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54);&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; March 11, 2024 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 45 minute read &lt;/p&gt;
--&gt;
&lt;h2 id=&#34;interpolation&#34;&gt;Interpolation&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Interpolating Functions&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;Given as set of points $p_0$, $\ldots$, ${p_n \in \mathbb{R}}$ and corresponding nodes $u_0$, $\ldots$, ${u_n \in \mathbb{R}}$, a function ${f : \mathbb{R} \rightarrow \mathbb{R}}$ with ${f(u_i) = p_i}$ is an &lt;strong&gt;interpolating function&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This can be generalised to higher dimensions, i.e. ${f : \mathbb{R} \rightarrow \mathbb{R}^N }$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Polynomial Interpolation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
p\left( u \right) = \sum\limits_{i=0}^{n} \alpha_i \varphi_i \left( u \right)
$$$$
\Phi \alpha = p
$$$$
\begin{equation*}
\Phi = \left( \begin{array}{cccc}
  \varphi_0 (u_0) &amp; \varphi_1 (u_0) &amp; \cdots &amp; \varphi_n (u_0) \\\
  \vdots &amp; &amp; &amp; \vdots \\\
  \varphi_0 (u_n) &amp; \cdots &amp; \cdots &amp; \varphi_n (u_n) \end{array} \right).
\end{equation*}
$$&lt;p&gt;
Thus, to fit the polynomials to the data $\alpha = \Phi^{-1} p$.&lt;/p&gt;
&lt;p&gt;The collocation matrix is invertible if and only if the set of functions $\varphi$ are linearly independent.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!--
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$p\left( u \right) = \sum\limits_{i=0}^{n} \alpha_i \varphi_i \left( u \right)$$$$\Phi \alpha = p$$&lt;p&gt;
where $\Phi$ is the &lt;strong&gt;Vandermonde matrix&lt;/strong&gt;.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




--&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Lagrange Polynomials&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\begin{equation*}
p \left( x\right) = \sum\limits_{i=0}^{n} p_i l_i\left(x\right)
\end{equation*}
$$$$
\begin{equation*}
l_{i} \left( x \right) = \prod \limits_{\substack{j = 0,\newline{}j \ne i}}^{n} \dfrac{x - x_j}{x_i - x_j}.    
\end{equation*}
$$&lt;p&gt;
By construction, &lt;em&gt;the collocation matrix is the identity matrix&lt;/em&gt;. Thus, there is no need to invert the matrix to solve for the weights $\alpha$.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Newton Interpolation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
n_0(x) = 1, \quad n_i(x) = \left(x - x_0 \right) \left(x - x_1 \right) \cdots \left(x - x_{i-1} \right).
$$$$
\alpha_{i+1} = \dfrac{ y_{i+1} - p_i \left( x_{i+1} \right) }{ n_i \left(  x_{i+1} \right) }.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;Lagrange Interpolation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of interpolation using Lagrange polynomials can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/lagrange_polynomials/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;!-- It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/integrals.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/integrals.ipynb&#34;&gt;[here]&lt;/a&gt;. --&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;Runge&amp;#39;s Phenomenon&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of Runge&amp;rsquo;s phenomenon can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/runge/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/runge.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/runge.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;&lt;strong&gt;Aitken&amp;rsquo;s&lt;/strong&gt; algorithm is an iterative process for evaluating Lagrange interpolation polynomials at an arbitrary point, $u^*$, without explicitly constructing them. If the interpolating polynomial is given by $p$, and is derived from $n$ data points $(u_i, y_i)$ for $i=0,\ldots,n$&lt;/p&gt;
$$
p\left( u \right) = \sum\limits_{i=0}^{n} p_{i}^{n} l_i^{n}\left( u \right)
$$&lt;!-- Let $p_{i,j}$ be polynomials of degree $j − i$ which pass through the points $\left(u_k, y_k\right)$ for $k = i, i + 1, \ldots, j$. --&gt;
&lt;p&gt;The interpolation is achieved by constructing a series of polynomials, evaluated at the ${u=u^{*}}$, where $p_{i}^{k}\left( u \right)$ is given by&lt;/p&gt;
$$
p_i^{k+1}\left(u\right) = p_i^k\left(u\right) \left( \dfrac{u - u_{n-k}}{u_i - u_{n-k}} \right) + p_{n-k}^k\left(u\right) \left( 1- \dfrac{u - u_{n-k}}{u_i - u_{n-k}} \right)
$$&lt;p&gt;with initial values $p_i^0 = y_i^{\vphantom{0}}$.&lt;/p&gt;
$$
\begin{equation*}
\begin{array}{lllll}
p\left( u_0 \right) = p_{0}^0 &amp;                       &amp;                        &amp;  \\\
                              &amp; p_0^1 &amp;                        &amp;  \\\
p\left( u_1 \right) = p_{1}^0 &amp;                       &amp; p_0^2  &amp;  \\\
                              &amp; p_1^1 &amp;                        &amp; p_0^3 \\\
p\left( u_2 \right) = p_{2}^0 &amp;                       &amp; p_1^2  &amp;  \\\
                              &amp; p_2^1 &amp;                        &amp;  \\\
p\left( u_3 \right) = p_{3}^0 &amp;                       &amp;                        &amp;
\end{array}
\end{equation*}
$$&lt;p&gt;where the coefficients are evaluated from left to right.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- &lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            polynomial&amp;rsquo;s convergence.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




--&gt;
&lt;h2 id=&#34;piecewise-polynomial-interpolation&#34;&gt;Piecewise Polynomial Interpolation&lt;/h2&gt;
&lt;h2 id=&#34;spline-interpolation&#34;&gt;Spline Interpolation&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A function $s\left(u\right)$ is called a &lt;strong&gt;spline&lt;/strong&gt; of degree $k$ on the domain ${[a, b]}$ if ${s \in C^{k-1}\left( [a, b] \right)}$ and there exists nodes ${a = u_0 \lt u_1 \lt \ldots \lt u_m = b}$ such that $s$ is a polynomial of degree $k$ for ${i = 0, \ldots m-1}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;B-Splines&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A spline is said to be a &lt;strong&gt;b-spline&lt;/strong&gt; if it is of the form&lt;/p&gt;
$$
s\left(u\right) = \sum\limits_{i=0}^{m} \alpha_{i} \mathcal{N}_{i}^{n} \left(u \right)
$$&lt;p&gt;where $\mathcal{N}^n$ are the &lt;strong&gt;basis spline functions&lt;/strong&gt; of degree $n$ with minimal support. (That is they are positive in the domain and zero outside). The functions are defined recursively. Let $u_i$ be the set of nodes ${u_0, u_1, \ldots, u_m}$, then&lt;/p&gt;
$$
\begin{equation*}
\mathcal{N}_{i}^{0} \left(u \right) =
\left\{
\begin{array}{ll}
1 &amp; \quad \text{for} \quad u_i \le u \le u_{i+1} \\
0 &amp; \quad \text{else.}
\end{array}
\right.
\end{equation*}
$$&lt;p&gt;and&lt;/p&gt;
$$
\mathcal{N}_{i}^{n} \left(u \right) = \alpha_i^{n-1}\left(u \right)  \mathcal{N}_{i}^{n-1} \left(u \right) + \left( 1 - \alpha_{i+1}^{n-1}\left(u \right)\right)  \mathcal{N}_{i+1}^{n-1} \left(u \right)
$$&lt;p&gt;where&lt;/p&gt;
$$
\alpha_{i}^{n-1}\left(u \right) = \dfrac{u - u_i}{u_{i+n} - u_i}
$$&lt;p&gt;
is a local parameter.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;Given data with nodes $u_i$ and values $p_i$, to interpolate with splines, of order $n$, requires solving&lt;/p&gt;
$$
\text{Find} \quad s = \sum\limits_{i=0}^{m} \alpha_i \mathcal{N}_{i}^{n} \left( u\right) \quad \text{such that} \quad s\left(u_i \right) = p_i \quad \text{for} \quad i=0, \ldots, m
$$$$
\Phi = \left(
  \begin{array}{ccc}
  \mathcal{N}_{0}^{n} \left(u_0\right) &amp; \cdots &amp; \mathcal{N}_{m}^{n} \left(u_0\right) \\\
  \vdots &amp; &amp; \vdots \\\
  \mathcal{N}_{0}^{n} \left(u_m\right) &amp; \cdots &amp; \mathcal{N}_{m}^{n} \left(u_m\right)
  \end{array}
  \right).
$$&lt;h2 id=&#34;least-squares-approximation&#34;&gt;Least-Squares Approximation&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Least-Squares Approximation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
E = \sum\limits_{i=0}^{n} \left( y - f\left(x_i, \beta \right) \right)^2.
$$$$
\dfrac{\partial E}{\partial \beta_j} = 0 \quad \text{for all } \quad j=1, \ldots m
$$$$
-2 \sum\limits_{i=0}^{n} \left(y_i - f\left(x_i, \beta_j \right) \right) \dfrac{\partial f\left( x_i, \beta \right)}{\partial \beta_j} = 0 \quad \text{for all } \quad j=1, \ldots m.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Linear Least-Squares Approximation&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
y = \sum\limits_{j=1}^{m} \beta_j \varphi_j \left( x \right)
$$$$
E\left( \beta \right) = \sum\limits_{i=0}^n \left( y_i - \sum\limits_{j=0}^m \beta_j \varphi_j\left( x_i \right) \right)^2
$$$$
\dfrac{\partial E}{\partial \beta_j} = \sum\limits_{j=1}^m \left( \sum\limits_{i=1}^n \varphi_j\left( x_i \right) \varphi_k \left( x_i \right) \right) = 0.
$$$$
\Phi^T \Phi \beta = \Phi^T y,
$$&lt;p&gt;
i.e. $\beta = \left( \Phi \Phi^T \right)^{-1} \Phi y$, where $\Phi$ is the collocation matrix.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




</description>
    </item>
    
    <item>
      <title>Finite Difference Methods for Differential Equations</title>
      <link>https://djps.github.io/docs/numericalmethods24/part3/odes/</link>
      <pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate>
      <guid>https://djps.github.io/docs/numericalmethods24/part3/odes/</guid>
      <description>&lt;!--
&lt;style&gt;
mjx-container {
  display: inline-block;
}
mjx-assistive-mml {
  right: 0px;
  bottom: 0px;
}
&lt;/style&gt;


&lt;p style=&#34;font-size: 14px; letter-spacing: 0.03em; color: rgb(0,0,0,0.54);&#34;&gt; &lt;span style=&#34;font-weight: 700;&#34;&gt; David Sinden &lt;/span&gt; &amp;middot;
&lt;i class=&#34;far fa-calendar&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; May 15, 2024 &amp;middot;
&lt;i class=&#34;far fa-clock&#34; aria-hidden=&#34;true&#34; style=&#34;color: rgb(0,0,0,0.54);&#34;&gt;&lt;/i&gt; 45 minute read &lt;/p&gt;


## Finite Difference Methods for Differential Equations
--&gt;
&lt;p&gt;Solutions are functions.&lt;/p&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Ordinary Differential Equations&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            An &lt;strong&gt;ordinary differential equation&lt;/strong&gt; (ODE) is an equation that involves one of more derivatives of a function of a single variable.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!-- For example, with only the first derivative $y^{\prime} \left(t\right) = f\left( y\left(t\right), t)$  --&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Initial Value Problems&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;strong&gt;initial value problem&lt;/strong&gt; (IVP) is given by an ordinary differential equation of the form ${y^{\prime} \left(t\right) = f\left( y\left(t\right), t\right)}$ and initial value ${y\left(a\right)=y_a}$ for the unknown function $y\left(t\right)$.&lt;/p&gt;
&lt;p&gt;Often ${a=0}$, so the initial condition reads ${y(0)=y_0}$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;One step methods&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A numerical method for approximating the solution to a differential equation is called a &lt;strong&gt;one step method&lt;/strong&gt; if the computed solution at time step $t_{n+1}$, denoted by $u_{n+1}$, only depends on the previous one, $t_i$, where $t_{n+1} = t_n + h$, for some small increment ${h=\Delta t}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;forward-euler-method&#34;&gt;Forward Euler Method&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
u_{n+1} = u_n + h f_n
$$&lt;p&gt;
where $u_n = u \left(t_n \right)$ and ${f_{n} = f\left( u_{n}, t_{n} \right)}$. The error is $\mathcal{O}\left( h^2 \right)$.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;backward-euler-method&#34;&gt;Backward Euler Method&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
u_{n+1} = u_n + h f_{n+1}
$$&lt;p&gt;
where ${f_{n+1} = f\left( u_{n+1}, t_{n+1} \right) = f\left( u\left(t_{n+1} \right), t_{n+1} \right) }$. The error is $\mathcal{O}\left( h^2 \right)$.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;crank-nicolson-method&#34;&gt;Crank-Nicolson Method&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
u_{n+1} = u_n + \dfrac{h}{2}\left( f_n + f_{n+1} \right).
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h3 id=&#34;heuns-method&#34;&gt;Heun&amp;rsquo;s Method&lt;/h3&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
u_{n+1} = u_n + \dfrac{h}{2}\left( f_n + f\left( u_n + h f_n, t_{n+1} \right) \right).
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A numerical method is said to be &lt;strong&gt;explicit&lt;/strong&gt; if an approximation $u_{k+1}$ can be calculated directly from already computed values $u_i$ for ${i &lt; k}$. Otherwise, the method is said to be &lt;strong&gt;implicit&lt;/strong&gt;.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;Often, implicit methods require, at each step $k+1$, the solution of a nonlinear equation for computing $u_{k+1}$.&lt;/p&gt;
&lt;p&gt;Both the Forward Euler and Heun&amp;rsquo;s method are explicit. The Backward Euler and Crank-Nicolson methods are implicit.&lt;/p&gt;
&lt;p&gt;Heun&amp;rsquo;s method can be interpreted as the Crank-Nicolson method with the approximation ${u_{n+1} \approx u_n + h f_n}$ replacing the explicit $f_{n+1}$ term, which depends on $u_{n+1}$.&lt;/p&gt;
$$
y\left( t + h \right) = y\left( t \right) + \int_{t}^{t+h} f\left( y\left(\tau\right), \tau \right) \, \mathrm{d}\tau.
$$&lt;p&gt;Thus, the Forward Euler method is the &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part2/integration/#left&#34;&gt;left Riemann sum&lt;/a&gt;, Backward Euler is the &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part2/integration/#right&#34;&gt;right Riemann sum&lt;/a&gt; and the Crank-Nicolson is the &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part2/integration/#trap&#34;&gt;trapezoidal rule&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;analysis-of-one-step-methods&#34;&gt;Analysis of One-Step Methods&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\left| f\left(x\right) - f\left(y\right) \right| \le  C \Vert x - y\Vert^\alpha
$$&lt;p&gt;
for all $x$ and $y$. If ${\alpha=1}$ the function is said to be &lt;strong&gt;Lipshitz continuous&lt;/strong&gt;.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Consistency Error&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
u_{n+1} = u_n + h \Phi\left( t_n, u_n, f_n, h \right)
$$&lt;p&gt;
with $\Phi$ the increment function. For the exact solution to the differential equation, $y\left(t_n \right) = y_n$, the solution is&lt;/p&gt;
$$
y_{n+1} = y_n + h \Phi\left( t_n, y(t_n), f_n, h \right) + \varepsilon_n  
$$&lt;p&gt;which can be written as&lt;/p&gt;
$$
\tau_n = \dfrac{y_{n+1} - y_n}{h} - \Phi\left( t_n, y(t_n), f_n, h \right)
$$&lt;p&gt;where $\varepsilon_n = h \tau_n$ for a ${\tau_n = \tau_n\left(h\right)}$ defined as the &lt;strong&gt;local truncation error&lt;/strong&gt; at step $n$.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;consistency error&lt;/strong&gt; is given by ${\tau = \max_n | \tau_n | }$.&lt;/p&gt;
&lt;p&gt;A method is said to be &lt;strong&gt;consistent&lt;/strong&gt; if $\lim\limits_{h \to 0} \Phi = f$. This means the increment function is a good approximation to the differential equation as the step size tends to zero.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Convergence&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
\tau_{g,n} = \left| y_n - u_n \right|
$$$$
\tau_{g,n} = \left| y_n - \left( u_0 + h\Phi\left(t_0, u_0, f_0, h\right) +h\Phi\left(t_1, u_1, f_1, h\right) + \ldots + h\Phi\left(t_n, u_n, f_n, h\right) \right) \right|.
$$&lt;p&gt;
If $\lim\limits_{h\rightarrow 0} u_{n+1} = y\left(t_{n+1} \right)$ the method is said to be &lt;strong&gt;locally convergent&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The scheme is &lt;strong&gt;convergent&lt;/strong&gt; if the global truncation error goes to zero as the step size goes to zero, that is ${\lim\limits_{h \to 0} \max\limits_{n} | \tau_{g,n}  | = 0}$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Order&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A one-step method is of order $p \in \mathbb{N}$, if for all ${t \in \left[ 0, T \right]}$, the solution satisfies the condition that ${\tau\left(h\right) = \mathcal{O}\left( h^p \right) }$ as ${h \rightarrow 0}$.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Zero Stable Methods&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            $$
u_{n+1} = u_n + h \Phi\left( t_n, u_n, f_n, h \right)
$$&lt;p&gt;
with $\Phi$ the increment function, is called &lt;strong&gt;zero-stable&lt;/strong&gt; if there exists both a maximal step size, $h_{\mathrm{max}}$ and a constant, $C$, such that for all ${h \in \left[0, h_{\mathrm{max}} \right]}$ and for some ${\varepsilon \gt 0}$, then the following holds:&lt;/p&gt;
$$
z_{n+1} = z_n + h \Phi\left( t_n, z_n, f_n\left(z_n, t_n\right), h \right) + \delta_{n+1}
$$&lt;p&gt;with $z_0 = {y_0 +\delta_0}$, then&lt;/p&gt;
$$
\left\| z_n - u_n \right\| \le C \varepsilon \quad \text{for} \quad 0 \le n \le N.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;If a method is zero-stable, then this means that small perturbations in the computations lead to small perturbations in the approximations.&lt;/p&gt;
&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            If the increment function $\Phi$ of a one step numerical scheme is Lipshitz continuous for $u_n$ for any $h$ and $t_n$, then the one step method is zero-stable.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;If the increment function $\Phi$ is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lipshitz continuous for $y_n$ for any $h$ and $t_{n+1}$,&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the method is &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part1/linear-equations/#fundamental-theorem-of-numerical-analysis&#34;&gt;consistent&lt;/a&gt;, i.e. $\lim\limits_{h \rightarrow 0} \tau \left(h \right) = 0$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if $\left| y_0 - u_0 \right| \rightarrow 0$ as $h \rightarrow 0$,&lt;/li&gt;
&lt;/ul&gt;
$$
\lim \limits_{h \rightarrow 0} \left| y_n - u_n \right| = 0.
$$&lt;p&gt;
Also, if the method is of order $p$ and if ${\left| y_0 - u_0 \right| = \mathcal{O}\left(h^p\right)}$ as ${h\rightarrow 0}$, then the convergence is of order $p$.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;Absolute Stability&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A numerical scheme for approximating the solution to the linear differential equation ${y^{\prime}\left(t\right) = \lambda y\left(t\right)}$ with ${\lambda \in \mathbb{C}}$ and initial condition ${y_0}$ is said to be &lt;strong&gt;absolutely stable&lt;/strong&gt; if ${\left|u_n\right| \rightarrow 0}$ as ${n \rightarrow \infty}$, when ${\operatorname{Re}\left(\lambda\right) \lt 0}$ for a fixed value of $h$.&lt;/p&gt;
&lt;p&gt;The region of absolute stability of a numerical method for ${y^{\prime}\left(t\right) = \lambda y\left(t\right)}$ is the set&lt;/p&gt;
$$
\lbrace h \lambda \in \mathbb{C} \quad \text{such that} \quad  | u_n | \rightarrow 0 \quad \text{as} \quad t_n \rightarrow \infty \rbrace.
$$
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;Zero stability considers when ${h \rightarrow 0}$, whereas absolute stability concerns behaviour as ${t_n \rightarrow \infty}$.&lt;/p&gt;
&lt;h2 id=&#34;lax-equivalence&#34;&gt;Lax Equivalence&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;A problem is said to be &lt;strong&gt;well-posed&lt;/strong&gt; if&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a unique solution exists for any initial conditions and&lt;/li&gt;
&lt;li&gt;the solution&amp;rsquo;s behaviour changes continuously with the initial conditions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A problem which does not have these properties is said to be &lt;strong&gt;ill-posed&lt;/strong&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;div class=&#34;details admonition Theorem open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0M3.75 12h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0m-.375 5.25h.007v.008H3.75zm.375 0a.375.375 0 1 1-.75 0a.375.375 0 0 1 .75 0&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Theorem: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            The Lax Equivalence theorem or Lax–Richtmyer theorem is the equivalent form of the &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part1/linear-equations/#fundamental-theorem-of-numerical-analysis&#34;&gt;fundamental theorem of numerical analysis&lt;/a&gt; for differential equations, which states that a &lt;em&gt;consistent&lt;/em&gt; finite difference method for a well-posed linear initial value problem, the method is &lt;em&gt;convergent&lt;/em&gt; if and only if it is &lt;em&gt;stable&lt;/em&gt;.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;!--
https://www.danlj.org/eaj/math/summaries/ftna/ftna.pdf
https://people.maths.ox.ac.uk/trefethen/4all.pdf
For a _partial_ differential equation, consistency means that a solution to the initial value problem approximately satisfies the discretized equation as the mesh size goes to zero, thus the error, i.e. the difference between the analytical solution and the computed solution tends to zero as the
For an initial value problem, consistency means that the error committed by the numerical algorithm over a single time step is small.
For an initial value problem, the fundamental theorem simply says that if the error committed on each time step is small enough, and if the rate of error growth is bounded, than the error in the solution will remain small.
--&gt;
&lt;h2 id=&#34;runge-kutta-and-multi-step-schemes&#34;&gt;Runge-Kutta And Multi-Step Schemes&lt;/h2&gt;
&lt;p&gt;If an ordinary differential equation is given by ${\dot{y}= f\left( y, t \right)}$, then a Runge-Kutta scheme takes the form&lt;/p&gt;
$$
u_{n+1} = u_n + h F\left( t_n, u_n, h; f \right)
$$&lt;p&gt;where $F$ is an increment function given by&lt;/p&gt;
$$
F\left( t_n, u_n, h; f \right) = \sum\limits_{i=1}^s b_i k_i
$$&lt;p&gt;with $k_i$ defined as&lt;/p&gt;
$$
k_i = f\left( u_n + h\sum_{j=1}^s a_{i, j} k_j, t_n + c_i h \right) \quad i=1, \ldots, s
$$&lt;p&gt;where $s$ is referred to as the number of stages of the method.&lt;/p&gt;
&lt;p&gt;Thus, an $s$-stage scheme is characterised by coefficients $b_i$, $c_i$ and $a_{i,j}$ for ${i, j = 1,\ldots s}$&lt;/p&gt;
&lt;p&gt;If the matrix defined by the elements $a_{i,j}$ is lower triangular, i.e. ${a_{i,j}=0}$ for all ${i \le j}$, then each $k_i$ can be computed explicitly in terms of the previous coefficients ${k_1, \ldots, k_{i-1}}$. Such schemes are &lt;strong&gt;explicit&lt;/strong&gt;, otherwise they are said to be &lt;strong&gt;implicit&lt;/strong&gt;.&lt;/p&gt;
$$
\begin{array}{c|cccc}
c_1    &amp; a_{1,1} &amp; \ldots &amp; a_{1,s} \\
\vdots &amp; \vdots  &amp; \ddots &amp; \vdots  \\
c_s    &amp; a_{s,1} &amp; \ldots &amp; a_{s,s} \\
\hline
       &amp; b_1     &amp; \ldots &amp; b_s
\end{array}
$$$$
h \tau_{n+1}\left(h\right) = y\left(t_{n+1} \right) - y\left(t_{n} \right) - h F\left( t_n, u_n, h; f \right).
$$&lt;p&gt;It can be shown that ${\tau\left(h\right) = \max\left| \tau_{n+1}\left(h\right) \right| \rightarrow 0}$ as ${h \rightarrow 0}$ if and only if ${\sum_{i=1}^s b_i = 1}$.&lt;/p&gt;
&lt;p&gt;A Runge-Kutta method is of order ${p \ge 1}$ if ${\tau\left( h \right) = \mathcal{O}\left( h^p \right)}$ as ${h \rightarrow 0}$.&lt;/p&gt;
&lt;p&gt;The order of an $s$-stage &lt;em&gt;explicit&lt;/em&gt; Runge-Kutta method cannot be greater than $s$. Additionally, there does not exist a $s$-stage explicit Runge-Kutta method with order $s$ if ${s \ge 5}$.&lt;/p&gt;
&lt;p&gt;The order of an $s$-stage &lt;em&gt;implicit&lt;/em&gt; Runge-Kutta method cannot be greater than $2s$.&lt;/p&gt;
&lt;h3 id=&#34;runge-kutta-4&#34;&gt;Runge-Kutta 4&lt;/h3&gt;
&lt;p&gt;The most common form of the Runge-Kutta method is the fourth order Runge-Kutta method (RK4). It takes the form:&lt;/p&gt;
$$
u_{n+1} = u_n + \dfrac{h}{6} \left( k_1 + 2k_2 + 2 k_3 + k_4 \right)
$$$$
\begin{align*}
k_1 &amp; = f\left( u_n, t_n \right), \\\
k_2 &amp; = f\left( u_n + \dfrac{h}{2} k_1, t_n + \dfrac{h}{2} \right), \\\
k_3 &amp; = f\left( u_n + \dfrac{h}{2} k_2, t_n + \dfrac{h}{2} \right), \\\
k_4 &amp; = f\left( u_n + h k_3, t_n + h \right).
\end{align*}
$$&lt;div class=&#34;details admonition Example open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;M15.75 15.75V18m-7.5-6.75h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm0 2.25h.008v.008H8.25zm2.498-6.75h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm0 2.25h.007v.008h-.007zm2.504-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm0 2.25h.008v.008h-.008zm2.498-6.75h.008v.008h-.008zm0 2.25h.008v.008h-.008zM8.25 6h7.5v2.25h-7.5zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Example: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            &lt;p&gt;An &lt;span class=&#34;mycode&#34;&gt;.ipynb&lt;/span&gt; notebook with an example of solvers for odes can be accessed online &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/notebooks/ode_solvers/&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It can be downloaded from &lt;a href=&#34;https://djps.github.io/ipyth/ode_solvers.py/&#34;&gt;[here]&lt;/a&gt; as a python file or downloaded as a notebook from &lt;a href=&#34;https://djps.github.io/ipyth/ode_solvers.ipynb&#34;&gt;[here]&lt;/a&gt;.&lt;/p&gt;

        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;h2 id=&#34;partial-differential-equations&#34;&gt;Partial Differential Equations&lt;/h2&gt;
&lt;div class=&#34;details admonition Definition open&#34;&gt;
    &lt;div class=&#34;details-summary admonition-title&#34;&gt;
        
        &lt;span class=&#34;flex pr-3 pt-1&#34;&gt;
          &lt;svg height=&#34;24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;none&#34; stroke=&#34;currentColor&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;1.5&#34; d=&#34;m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z&#34;/&gt;&lt;/svg&gt;
        &lt;/span&gt;
        &lt;span class=&#34;dark:text-neutral-300&#34;&gt;
          Definition: &lt;em&gt;&lt;/em&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;details-content&#34;&gt;
        &lt;div class=&#34;admonition-content&#34;&gt;
            A &lt;strong&gt;partial differential equation&lt;/strong&gt; is relation involving a unknown function of several free variables and partial derivatives with respect to these variables.
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;




&lt;p&gt;A partial differential equation is said to be linear if it only contains linear terms of the unknown and its derivatives. For example, a second-order linear partial differential equation for a function ${u=u(x,t)}$&lt;/p&gt;
$$
a_1(x,t) u_{xx} + a_2(x,t) u_{xt} + a_3 u(x,t)_{tt} + a_3(x,t) u_x + a_4(x,t) u_t + a_5(x,t) u = f(x,t).
$$&lt;p&gt;where $u_{xx} = \dfrac{\partial^2 u}{\partial x^2}$, etc.&lt;/p&gt;
&lt;p&gt;For finite-difference schemes, &lt;em&gt;all&lt;/em&gt; partial derivatives must be approximated by &lt;a href=&#34;https://djps.github.io/docs/numericalmethods24/part-2/integration/#numerical-differentiation&#34;&gt;discretized differential operators&lt;/a&gt;.&lt;/p&gt;
&lt;!--
CFL.

Heat Equation
--&gt;
</description>
    </item>
    
  </channel>
</rss>
